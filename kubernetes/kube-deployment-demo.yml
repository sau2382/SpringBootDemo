apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: demo-service
  name: demo-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: demo-service
    spec:
      containers:
      - image: sau2382/demo-rest-service:0.0.1-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: demo-service
        ports:
            - containerPort: 7001
        readinessProbe:
          httpGet:
            port: 7001
            path: /demoservice/actuator/health/readiness
        livenessProbe:
          httpGet:
            port: 7001
            path: /demoservice/actuator/health/liveness            
        envFrom:
          - configMapRef:
              name: demo-service
        env:
         - name: demoservice-host
           value: helper-cluster-ip-service      
      - image: sau2382/spring-cloud-config-server:0.0.1-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: spring--cloud-config
      restartPolicy: Always


---
## Config Map to set spring profile as dev for demo-service application
apiVersion: v1
data:
  SPRING_PROFILES_ACTIVE: dev
  WELCOMETEXT: my app K8S 1.0
  #demoservice-host: helper-cluster-ip-service
kind: ConfigMap
metadata:
  name: demo-service
  namespace: default
  
  
---
##Creates a ClusterIP for demo-service application on port 7001 accesible only between pods and not outside world
apiVersion: v1
kind: Service
metadata:
  name: demo-cluster-ip-service
spec:
  type: ClusterIP
  selector:
    app: demo-service
  ports:
    - port: 7001
      targetPort: 7001

---
##Creates a ClusterIP for spring-config-server application on port 8888 accesible only between pods and not outside world
apiVersion: v1
kind: Service
metadata:
  name: spring-config-demo-cluster-ip-service
spec:
  type: ClusterIP
  selector:
    app: demo-service
  ports:
    - port: 8888
      targetPort: 8888        



---
# Loadbalancer service to loadbalance only one deployment per port - [7001 for demo-service and 8881 for spring-config server] 
# http://localhost:7001/demo-service/test
# http://localhost:8881/demo-service/dev
apiVersion: v1
kind: Service
metadata:
  labels:
    app: demo-service
  name: demo-service
  namespace: default
spec:
  ports:
  - name: demo-service
    port: 7001
    protocol: TCP
    targetPort: 7001
  - name: spring-config
    port: 8881
    protocol: TCP
    targetPort: 8888
  selector:
    app: demo-service
  sessionAffinity: None
  type: LoadBalancer



---
# NGINX Ingrees service to loadbalance multiple deployments on 80/443 port based on rules - [80/443 for demo-service and 80/443 for spring-config server]  
# http://localhost/demoservice/test
# http://localhost/demo-service/dev
apiVersion: networking.k8s.io/v1
# UPDATE API
kind: Ingress
metadata:
  name: ingress-service
  annotations:
    kubernetes.io/ingress.class: 'nginx'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    #nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/affinity-canary-behavior: "sticky"	
    nginx.ingress.kubernetes.io/session-cookie-path: "nginxcookie"		
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
spec:
  defaultBackend:
    service:
      name: demo-cluster-ip-service
      port:
        number: 80
  rules:
    - http:
        paths:
          - path: /
            # UPDATE PATH
            pathType: Prefix
            # ADD PATHTYPE
            backend:
              service:
                # UPDATE SERVICE FIELDS
                name: demo-cluster-ip-service
                port:
                  number: 7001        
          - path: /demoservice/?(.*)
            # PATH  http://localhost:80/demoservice/test
            pathType: Prefix
            # ADD PATHTYPE
            backend:
              service:
                # UPDATE SERVICE FIELDS
                name: demo-cluster-ip-service
                port:
                  number: 7001
          - path: /helperservice/?(.*)
            # PATH http://localhost:80/helperservice/help/world
            pathType: Prefix
            # ADD PATHTYPE
            backend:
              service:
                # UPDATE SERVICE FIELDS
                name: helper-cluster-ip-service
                port:
                  number: 7002                  